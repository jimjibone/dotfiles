# match vim's idea of what 'v' and 's' does
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"


bind S set -g synchronize-panes

bind < resize-pane -L 25
bind > resize-pane -R 25

bind r rotate-window

set-option -g pane-border-fg colour250
set-option -g pane-active-border-fg colour015

# new window open in home
bind-key c new-window -c $HOME

# like vim
bind-key = select-layout even-horizontal

# Set status bar
set -g status-bg colour250
set -g status-fg black
# Highlight active window
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg black

set-window-option -g window-status-bell-bg black
set-window-option -g window-status-bell-fg colour248

set -g status-interval 1

# messages should linger for more than 750ms
#set-option display-time 2500

setw -g aggressive-resize on

# apps should know that this is 'screen' and not xterm. Slight compatibility
# reasons. tmux should be running in xterm-256colors, and set TERM so that
# applications within tmux see screen-256colors tmux does not support -bce
# (background color erase)
set -g default-terminal 'screen-256color'

# hostname on left
# default: override later.
set -g status-left-bg colour85
set -g status-left-length 40
set -g status-left ' #(echo $HOSTNAME | tr a-z A-Z) '

# load date time on right
set -g status-right-length 80
#set -g status-right "  #[fg=colour236]%d-%m-%Y #[fg=black]%H:%M:%S "
#set -g status-right "#(uptime) "
set -g status-right "#[fg=colour240] #(date) "

set -g window-status-format ' #I:#W '
set -g window-status-current-format ' #I:#W '


bind \; command-prompt

# Allows for faster key repetition
set -s escape-time 0

set -g set-titles on
set -g set-titles-string "#T"

# mouse to scroll buffer
setw -q -g mode-mouse on
set -q -g mouse-select-pane on
set -q -g mouse-select-window on
set -q -g mouse-resize-pane on

# less invasive, better place for clock etc (at end, new command will stop loading if not found...)
set -g status-position top

# switch pane once per escape. Save time
# http://stackoverflow.com/questions/13668633/split-pane-switching-in-tmux-switch-once-per-command
bind-key Up    select-pane -U
bind-key Down  select-pane -D
bind-key Left  select-pane -L
bind-key Right select-pane -R

bind-key k select-pane -U
bind-key j select-pane -D
bind-key h select-pane -L
bind-key l select-pane -R

set-option -g  history-limit 5000

bind-key J resize-pane -D 15
bind-key K resize-pane -U 15
bind-key H resize-pane -L 15
bind-key L resize-pane -R 15

# tmux 2.1 https://github.com/tmux/tmux/issues/145
set -q -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
