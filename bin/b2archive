#!/bin/bash
set -e


export DIR="$2"
export ARCHIVE="${DIR}.7z"

# check auth and bucket
function initialise {
    if [ ! $B2ARCHIVE_BUCKET_NAME ]; then
        echo 'B2ARCHIVE_BUCKET_NAME must be set'
        exit 1
    fi

    if [ ! $B2ARCHIVE_ENCRYPTION_KEY ]; then
        echo 'B2ARCHIVE_BUCKET_NAME must be set'
        exit 1
    fi

    if ! b2 list_buckets | grep -q $B2ARCHIVE_BUCKET_NAME; then
        b2 create_bucket $B2ARCHIVE_BUCKET_NAME allPrivate
    fi
}


case $1 in
    archive)
        initialise
        if [ -f "$ARCHIVE" ]; then
            echo "$ARCHIVE already exists. Refusing to overwrite."
            exit 2
        fi

        if [ ! -d "$DIR" ]; then
            echo "$DIR is not a directory"
            exit 2
        fi

        if ! echo $DIR | grep -qE '^[0-9_a-zA-Z]+$'; then
            echo "Given directory to archive must exist and be referenced in current directory and contain alphanumeric characters only"
            exit 2
        fi


        7z a -mhe=on -p="$B2ARCHIVE_ENCRYPTION_KEY" "$ARCHIVE" "$DIR"


        while sleep 1; do
            b2 upload_file $B2ARCHIVE_BUCKET_NAME $ARCHIVE $ARCHIVE && break
            echo -e "\e[31mUpload Failed, resuming...\e[0m"
        done
    ;;
    list)
        initialise
        b2 list_file_names $B2ARCHIVE_BUCKET_NAME
    ;;
    restore)
        initialise
        if [ -f "$ARCHIVE" ]; then
            echo "$ARCHIVE already exists. Refusing to overwrite."
            exit 2
        fi

        if [ ! -d "$DIR" ]; then
            echo "$DIR already exists. Refusing to overwrite."
            exit 2
        fi

        b2 download_file_by_name $B2ARCHIVE_BUCKET_NAME $ARCHIVE $ARCHIVE
        lz x -p"$B2ARCHIVE_ENCRYPTION_KEY" "$ARCHIVE"
    ;;
    *)
        echo Usage: "$1 archive <directory>"
        echo Usage: "$1 list"
        echo Usage: "$1 restore <directory>"
        echo
        echo "Requires authorized account set up with b2"
        echo "Requires B2ARCHIVE_BUCKET_NAME in env"
        echo "Requires B2ARCHIVE_ENCRYPTION_KEY in env"
    ;;
esac


# commands:
# list
# restore
# backup
